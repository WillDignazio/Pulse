buildscript {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java' // Needed for protobuf
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'

    id "com.google.protobuf" version "0.6.1"
    id "com.commercehub.gradle.plugin.avro" version "0.3.4"
}

repositories {
    mavenCentral()
}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:2.6.1'
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'
    compile group: 'com.google.inject', name: 'guice', version: '4.0'
    compile 'com.google.inject.extensions:guice-assistedinject:4.0'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'org.apache.solr', name: 'solr-solrj', version: '5.2.1'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.slf4j:slf4j-simple:1.6.1'
    compile 'com.google.protobuf:protobuf-java:2.6.1'
    compile 'org.apache.avro:avro-tools:1.7.7'
}

defaultTasks 'build', 'writeClasspath'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'
jar {
    baseName = 'pulse'
    manifest {
        attributes 'Implementation-Title': 'Pulse Search Engine',
                   'Implementation-Version': version,
                   'Main-Class': 'net.digitalbebop.Pulse'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

/*
 * Write out the classpath for all internal dependencies, then append the
 * actual expected build JAR to the end of it.
 */
task writeClasspath(dependsOn: build) << {
    new File(buildDir.absolutePath + "/runtime.classpath").withWriter {
        out -> out.writeLine(sourceSets.main.runtimeClasspath.asPath +
                             ":" + jar.archivePath);
    }
}